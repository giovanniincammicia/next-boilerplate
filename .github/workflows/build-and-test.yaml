# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build & Test

on:
  push:
    branches: 
      - "main"
  pull_request:
    branches: 
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v5
    - uses: pnpm/action-setup@v4
      with:
        version: ${{ matrix.pnpm-version }}
    - name: Generate ephemeral BETTER_AUTH_SECRET
      run: echo "BETTER_AUTH_SECRET=$(openssl rand -base64 32)" >> $GITHUB_ENV
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Cache pnpm store and Next.js build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.pnpm-store
          ~/.cache/pnpm
          ~/.npm
          ${{ github.workspace }}/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js','**/*.jsx','**/*.ts','**/*.tsx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
    - run: pnpm install
    - run: SKIP_ENV_VALIDATION=true pnpm build
    - run: pnpm test